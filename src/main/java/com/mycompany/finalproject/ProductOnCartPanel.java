/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.finalproject;

import java.util.ArrayList;

/**
 *
 * @author YTAC
 */
public class ProductOnCartPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProductOnCartPanel
     */
    Main parent;
    
    ArrayList<Accessory> cartAcc;
    ArrayList<Top> cartTop;
    
    private Top itemTop = null;
    private Accessory itemAcc = null;
    
    public ProductOnCartPanel(Main parent,Top item, ArrayList<Top> cart) {
        initComponents();
        this.parent = parent;
        itemTop = item;
        cartTop = cart;
        this.size.setText(item.getSize());
        this.name.setText(itemTop.getProductName());
        this.icon.setIcon(itemTop.getProductIcon());
        this.amount.setText(itemTop.getAmount()+"");
        this.total.setText(String.format("PHP %.2f", itemTop.getTotal()));
        setVisible(true);
    }
    
    public ProductOnCartPanel (Main parent, Accessory acc, ArrayList<Accessory> cart) {
        initComponents();
        this.parent = parent;
        itemAcc = acc;
        cartAcc = cart;
        this.size.setText("");
        this.name.setText(itemAcc.getProductName());
        this.icon.setIcon(itemAcc.getProductIcon());
        this.amount.setText(itemAcc.getAmount()+"");
        this.total.setText(String.format("PHP %.2f", itemAcc.getTotal()));
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        icon = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        amount = new javax.swing.JTextField();
        Minus = new javax.swing.JButton();
        add = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        total = new javax.swing.JLabel();
        buy = new javax.swing.JButton();
        size = new javax.swing.JLabel();

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/A.png"))); // NOI18N

        name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        name.setText("Name");

        amount.setEditable(false);
        amount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Minus.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Minus.setText("Minus");
        Minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinusActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        total.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        total.setText("total");

        buy.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        buy.setText("Buy");
        buy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyActionPerformed(evt);
            }
        });

        size.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        size.setText("size");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(icon)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Minus)
                        .addContainerGap(86, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(total)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buy)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(name))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(icon)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(name)
                        .addGap(18, 18, 18)
                        .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add)
                            .addComponent(Minus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buy)
                            .addComponent(delete)
                            .addComponent(total))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    public void deleteItem(Top item) {
        int index = -1;
        
        for (int i = 0; i < cartTop.size(); i++) {
                
            Top itemOnCart = cartTop.get(i);
            if (itemTop.getProductName().equals(itemOnCart.getProductName())
                && itemTop.getSize().equals(itemOnCart.getSize())) {
                index = i;
                break;
            }
        }
        
        if (index == -1) return;
        
        cartTop.remove(index);
    }
    
    public void deleteItem(Accessory item) {
        int index = -1;
        for (int i = 0; i < cartAcc.size(); i++) {
            Accessory itemOnCart = cartAcc.get(i);
            if (itemAcc.getProductName().equals(itemOnCart.getProductName())) {
                index = i;
                break;
            }
        }  
        if (index == -1) return;
        
        cartAcc.remove(index);
    }
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (itemTop != null) 
            deleteItem(itemTop);
        else
            deleteItem(itemAcc);
        parent.renderCartPanel();
    }//GEN-LAST:event_deleteActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if (itemTop != null) {
            itemTop.addAmount(1);
            amount.setText(itemTop.getAmount()+"");
            total.setText(String.format("PHP %.2f", itemTop.getTotal()));
        } else {
            itemAcc.addAmount(1);
            amount.setText(itemAcc.getAmount()+"");
            total.setText(String.format("PHP %.2f", itemAcc.getTotal()));
        }
        
        parent.renderCartPanel();
    }//GEN-LAST:event_addActionPerformed

    private void buyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyActionPerformed
        BuyDialog bd;
        
        if (itemTop != null) 
            bd = new BuyDialog(parent, true, cartTop, itemTop);
        else 
            bd = new BuyDialog(parent, true, cartAcc, itemAcc);
        
        bd.setVisible(true);
    }//GEN-LAST:event_buyActionPerformed

    private void MinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinusActionPerformed
        
        if (itemTop != null) {
            itemTop.decreamentAmount();
            amount.setText(itemTop.getAmount()+"");
            total.setText(String.format("PHP %.2f", itemTop.getTotal()));
            
            if (itemTop.getAmount() == 0) 
                  deleteItem(itemTop);
            
        } else {
            itemAcc.decreamentAmount();
            amount.setText(itemAcc.getAmount()+"");
            total.setText(String.format("PHP %.2f", itemAcc.getTotal()));
            
            if (itemAcc.getAmount() == 0) 
                deleteItem(itemAcc);
        }
        parent.renderCartPanel();
    }//GEN-LAST:event_MinusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Minus;
    private javax.swing.JButton add;
    private javax.swing.JTextField amount;
    private javax.swing.JButton buy;
    private javax.swing.JButton delete;
    private javax.swing.JLabel icon;
    private javax.swing.JLabel name;
    private javax.swing.JLabel size;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
